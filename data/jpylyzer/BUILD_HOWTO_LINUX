This howto explains how to build 'jpylyzer' as an linux executable so that python is no longer a dependency.
This was done because there was an incompatibility between 'jpylyzer' and python version below 2.7.

## INSTRUCTIONS (APPLIES TO PYINSTALLER 2)

1. Download 'pyinstaller' from:

http://www.pyinstaller.org/

2. Unpack it:

tar -xjf pyinstaller-2.0.tar.bz2

3. compile (in below example result as one single file):

python pyinstaller.py --onefile ./jpylyzer/jpylyzer.py

4. look in the directory 'dist'.

Voila!

## INSTRUCTIONS (APPLIES TO PYINSTALLER 1.5)

With PyInstaller 1.5 (which I think is the version that is still used on the Amazon Webcloud setup) 
you first need to make a .spec file, so the compilation involves two steps:

python Makespec.py --onefile ./jpylyzer/jpylyzer.py
python pyinstaller.py jpylyzer.spec

## NOTE ON JPYLYZER MAKEFILE

The current version of the makefile uses the following commands:

pymakespec --onefile ./jpylyzer/jpylyzer.py
pyinstaller jpylyzer.spec

Apparently pymakespec/pyinstaller are helper scripts that call Makespec.py and pyinstaller.py, respectively.

This works on the Amazon Webcloud setup, but for local builds you will need to change these lines
so that the actual Python scripts are called. To make things slightly more complicated PyInstaller
has no default installation location, so you'll have to insert the file paths that apply to you
system, e.g.:

python /home/johan/pyinstall/Makespec.py --onefile ./jpylyzer/jpylyzer.py
python /home/johan/pyinstall/pyinstaller.py jpylyzer.spec

## BUILDING THE DEBIAN PACKAGES LOCALLY

You can build jpylyzer locally using:

dpkg-buildpackage -tc

However this will result in an error because of a missing changelog file. Apparently it is generated
automatically on the Amazon Webcloud setup, but I'm not exactly sure how! For testing purposes you may
use a dummy changelog as a workaround.

In addition you will need to edit the makefile as described in the previous section.

More info on all this here:

http://www.openplanetsfoundation.org/blogs/2013-04-23-adventures-debian-packaging

Updated 2/5/2013 by JvdK